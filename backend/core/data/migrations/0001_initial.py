# Generated by Django 4.1.7 on 2023-05-15 04:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_code', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Branch Code')),
                ('branch_short_name', models.CharField(help_text='e.g. CSE', max_length=10, verbose_name='Branch Name')),
                ('branch_full_name', models.CharField(help_text='e.g. Computer Science and Engineering', max_length=50, verbose_name='Branch Full Name')),
                ('available', models.BooleanField(default=True, help_text='If branch is currently available to enrollment.')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='StaffDetail',
            fields=[
                ('email', models.EmailField(help_text='e.g. firstname.lastname@ljku.edu.in', max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=20, verbose_name='First Name')),
                ('middle_name', models.CharField(max_length=20, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=20, verbose_name='Last Name')),
                ('short_name', models.CharField(help_text='e.g. DKT', max_length=5, verbose_name='Short Name')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Gender')),
                ('birth_date', models.DateField(help_text='dd-mm-yyyy', verbose_name='Birth Date')),
                ('mobile_number', models.CharField(help_text='e.g. +1234567890', max_length=15, validators=[django.core.validators.RegexValidator(message='Mobile number must be in international format with no spaces or special characters.', regex='^\\+?\\d{6,15}$')], verbose_name='Mobile Number')),
                ('category', models.CharField(choices=[('teaching', 'Teaching'), ('non-teaching', 'Non-Teaching')], max_length=20, verbose_name='Category')),
                ('active', models.BooleanField(default=True, help_text='Is the staff actively doing his/her job?', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Staff Detail',
                'verbose_name_plural': 'Staff Details',
            },
        ),
        migrations.CreateModel(
            name='Weightage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaching_type', models.CharField(choices=[('T', 'Theory'), ('P', 'Practical'), ('TU', 'Tutorial')], max_length=15)),
                ('category', models.CharField(choices=[('MCQ', 'MCQ'), ('THEORY_DESC', 'Theory Descriptive'), ('FORMULA_DERIVATION', 'Formulas and Derivation'), ('NUMERICAL', 'Numerical'), ('INDIVIDUAL_PROJ', 'Individual Project'), ('IPE', 'Internal Practical Evaluation (IPE)'), ('GROUP_PROJ', 'Group Project'), ('VIVA', 'Viva'), ('SEMINAR', 'Seminar')], max_length=50)),
                ('percentage_weightage', models.PositiveSmallIntegerField(help_text='Percemtage weightage distribution.')),
                ('marks_weightage', models.PositiveSmallIntegerField(help_text='Marks weightage distribution.')),
            ],
            options={
                'verbose_name': 'Weightage',
                'verbose_name_plural': 'Weightages',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_code', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Subject Code')),
                ('subject_short_name', models.CharField(help_text='e.g. FCSP-I', max_length=10, verbose_name='Subject Short Name')),
                ('subject_full_name', models.CharField(help_text='Fundamentals of Computer Science using Python-I', max_length=50, verbose_name='Subject Full Name')),
                ('total_credit', models.PositiveSmallIntegerField(help_text='Total credit of the subject.', verbose_name='Total Credit')),
                ('theory_credit', models.PositiveSmallIntegerField(help_text='Theory credit of the subject.', verbose_name='Theory Credit')),
                ('tutorial_credit', models.PositiveSmallIntegerField(help_text='Tutorial credit of the subject.', null=True, verbose_name='Tutorial Credit')),
                ('practical_credit', models.PositiveSmallIntegerField(help_text='Practical credit of the subject.', null=True, verbose_name='Practical Credit')),
                ('Weightage', models.ManyToManyField(help_text='Weightage distribution of the subject', to='data.weightage', verbose_name='Weightage')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='StudentDetail',
            fields=[
                ('enrolment_no', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text='e.g. enrolment_number@ljku.edu.in', max_length=30, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=20, verbose_name='First Name')),
                ('middle_name', models.CharField(max_length=20, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=20, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Gender')),
                ('birth_date', models.DateField(help_text='dd-mm-yyyy', verbose_name='Birth Date')),
                ('mobile_number', models.CharField(help_text='e.g. +1234567890', max_length=15, validators=[django.core.validators.RegexValidator(message='Mobile number must be in international format with no spaces or special characters.', regex='^\\+?\\d{6,15}$')], verbose_name='Mobile Number')),
                ('branch', models.ForeignKey(help_text='Branch details where student is enrolled.', on_delete=django.db.models.deletion.CASCADE, to='data.branch', verbose_name='Branch')),
            ],
            options={
                'verbose_name': 'Student Detail',
                'verbose_name_plural': 'Student Details',
            },
        ),
        migrations.CreateModel(
            name='FacultyAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty', models.ForeignKey(help_text='Faculty details', on_delete=django.db.models.deletion.CASCADE, to='data.staffdetail', verbose_name='Faculty')),
                ('subject', models.ForeignKey(help_text='Subject details', on_delete=django.db.models.deletion.CASCADE, to='data.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Faculty Allocation',
                'verbose_name_plural': 'Faculty Allocation',
            },
        ),
    ]
